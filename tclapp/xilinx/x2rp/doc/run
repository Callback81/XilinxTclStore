
Description: 

    Implements and generates bitstreams of a 2RP synthesized design.

Arguments:

    -pr_config - (Required) Partial configuration for the implementation run.

    -output_dir - (Required) Directory to save the results.

    -constrset - (Required) Constraints set to be use with the pr configuration provided in option '-pr_config'.
    
    -exclude_constrs - (Optional) List of constraint files to be excluded from generation of bit files.

    -shell - (Optional) RL/Shell instance path. Must be mentioned in case '-rl_platform_dcp' or '-cl_sh_bb_routed_dcp' option is not provided.

    -base_platform_dcp - (Optional) Base platform dcp file, contains only static routed region.
    
    -rl_platform_dcp - (Optional) Reconfigurable logic platform dcp file.   

    -cl_sh_bb_routed_dcp - (Optional) CL and SH blackbox routed dcp. (for updating CL, SH or both)
    
    -post_link_design_hook - (Optional) List of tcl commands to execute post link design for bit generation step.

    -opt_directive - (Optional) Directive for opt design step.

    -place_directive - (Optional) Directive for place design step.

    -enable_post_place_phys_opt - (Optional) Enable post place physical optimization. (Default: 0).

    -post_place_phys_opt_directive - (Optional) Directive for post place phys opt design step.

    -route_directive - (Optional) Directive for route design step.

    -post_route_phys_opt_directive - (Optional) Directive for post route phys opt design step.

    -bp_enable_post_place_phys_opt - (Optional) Enable post place physical optimization for base platform generation (Default: 0).

    -bp_opt_directive - (Optional) Directive for opt design step for base platform generation.

    -bp_place_directive - (Optional) Directive for place design step for base platform generation.

    -bp_post_place_phys_opt_directive - (Optional) Directive for post place phys opt design step for base platform generation.

    -bp_route_directive <arg> - (Optional) Directive for route design step for base platform generation.

    -bp_post_route_phys_opt_directive - (Optional) Directive for post route phys opt design step for base platform generation.    

    -base_scripts - (Optional) Directory which has pre/post tcl scripts for base platform generation.
                    Inside the folder it will look for pre/post scripts in <pre|post><design step>.tcl format.
                    Example: For design step link_design
                        Pre script  = prelinkdesign.tcl
                        Post script = postlinkdesign.tcl

    -rl_scripts - (Optional) Directory which has pre/post tcl scripts used after rl platform generation.
                    Inside the folder it will look for pre/post scripts in <pre|post><design step>.tcl format.
                    Example: For design step place_design
                        Pre script  = preplacedesign.tcl
                        Post script = postplacedesign.tcl

    -open_design_for_dsa_gen - (Optional) Open routed design checkpoint in current project context for DSA generation. (Default: 0).
    
    -generate_base_only - (Optional) Only generates base platform dcp. (Default: 0)

    -generate_rl_only - (Optional) Only generates rl platform dcp. (Default: 0)

    
Examples:

    Below examples are based on a design which has a 'top' bd, 'top' bd has a module reference to a partition def 'wrapper' as 'wrapper_def_0',
    'wrapper_def_0' has two module references to partition defs 'dynamic' and 'shell' as 'dynamic_region' and 'shell_region' respectively. 
    'w1', 'user' and 'design_2' are reconfigurable module names.

    1. The following example generates everything base platform, rl platform, full and partial bitstreams.
       The 2RP flow requires to have a Pblock for wrapper_def_0 inside an xdc file that contains everything except the static. 
       The 2RP flow requires the XDC file, here rest.xdc, to be specified using the exclude_constrs switch.

       % xilinx::x2rp::run -pr_config {top_i/wrapper_def_0:w1 top_i/wrapper_def_0/dynamic_region:user top_i/wrapper_def_0/shell_region:design_2} -output_dir ./output -exclude_constrs [get_files rest.xdc] -shell top_i/wrapper_def_0/shell_region -constrset [get_filesets constrs_1]

    2. To generate just the base platform of a 2RP design.

       % xilinx::x2rp::run -pr_config {top_i/wrapper_def_0:w1 top_i/wrapper_def_0/dynamic_region:user top_i/wrapper_def_0/shell_region:design_2} -output_dir ./output -exclude_constrs [get_files rest.xdc] -shell top_i/wrapper_def_0/shell_region -constrset [get_filesets constrs_1] -generate_base_only   

    3. The following example generates everything rl platform, full and partial bitstreams (starts from post base platform generation step).
       Note: If you have a Pblock for wrapper_def_0, you need to exclude it using exclude_constrs switch.

       % xilinx::x2rp::run -pr_config {top_i/wrapper_def_0:w1 top_i/wrapper_def_0/dynamic_region:user top_i/wrapper_def_0/shell_region:design_2} -output_dir ./output/ -base_platform_dcp ./output/base_platform.dcp -shell top_i/wrapper_def_0/shell_region -constrset constrs_1

    4. The following example generates everything full and partial bitstreams (starts from post rl platform generation step).
       Note: If you have a Pblock for wrapper_def_0, you need to exclude it using exclude_constrs switch.

       % xilinx::x2rp::run -pr_config {top_i/wrapper_def_0:w1 top_i/wrapper_def_0/dynamic_region:user top_i/wrapper_def_0/shell_region:design_2} -output_dir ./output/ -rl_platform_dcp ./output/platform.dcp -constrset constrs_1
    
    5. The following example generates everything full and partial bitstreams and also executes post link design hook script (starts from post rl platform generation step).
       Note: If you have a Pblock for wrapper_def_0, you need to exclude it using exclude_constrs switch.

       % xilinx::x2rp::run -pr_config {top_i/wrapper_def_0:w1 top_i/wrapper_def_0/dynamic_region:user top_i/wrapper_def_0/shell_region:design_2} -output_dir ./output/ -rl_platform_dcp ./output/platform.dcp -post_link_design_hook {"set_param hd.skipPartitionPinReductionOnCell top_i/wrapper_def_0/dynamic_region"} -constrset constrs_1

    6. To update the CL and SH using CL and SH blackbox routed dcp and generate full and partial bitstreams.

       % xilinx::x2rp::run -pr_config {top_i/wrapper_def_0:w1 top_i/wrapper_def_0/dynamic_region:user top_i/wrapper_def_0/shell_region:design_2} -output_dir ./output/ -post_link_design_hook {"set_param hd.skipPartitionPinReductionOnCell top_i/wrapper_def_0/dynamic_region"} -constrset constrs_1 -exclude_constrs [get_files rest.xdc] -cl_sh_bb_routed_dcp ./output/CL_SH_BB_routed.dcp

